{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:8000/classify",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $json.title }}"
            },
            {
              "name": "summary",
              "value": "={{ $json.summary }}"
            },
            {
              "name": "link",
              "value": "={{ $json.link }}"
            }
          ]
        },
        "options": {
          "timeout": 60000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -592,
        448
      ],
      "id": "f77d4257-25c2-44f7-8d73-cec051c9f4f3",
      "name": "Classify Event Tag",
      "executeOnce": false
    },
    {
      "parameters": {
        "content": "# INPUT: RSS Feeds & Collection\n",
        "height": 400,
        "width": 880,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1552,
        368
      ],
      "typeVersion": 1,
      "id": "a8f25729-5178-4d23-b11c-210cff960747",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# STEP 1: Classification & Risk Filtering\n",
        "height": 400,
        "width": 640,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -656,
        368
      ],
      "typeVersion": 1,
      "id": "ccd00367-45fe-4f2a-ba18-931c24b38337",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# STEP 2: LLM Event Insight & Alerting\n",
        "height": 352,
        "width": 624,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "f22c325b-706f-477b-ac72-494a6b020dff",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# STEP 3: Logging to Google Sheets\n",
        "height": 400,
        "width": 1024,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        368
      ],
      "typeVersion": 1,
      "id": "0e72fd65-375f-4a71-a703-c275077de80e",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "### Replace Ngrok URL",
        "height": 80,
        "width": 160,
        "color": 3
      },
      "id": "11799557-c4b4-46de-970d-2b4217d9824f",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1344,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Replace Ngrok URL",
        "height": 80,
        "width": 160,
        "color": 3
      },
      "id": "9cca282f-a4e0-44f9-bc56-be86fc1f09dd",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -608,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Replace Ngrok URL",
        "height": 80,
        "width": 192,
        "color": 3
      },
      "id": "1ac714bd-6695-48ef-bd5b-c9b0a87652b2",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        96,
        64
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# COMMAND CENTER: Telegram Bot",
        "height": 560,
        "width": 1680
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -656,
        784
      ],
      "typeVersion": 1,
      "id": "14e62626-58b7-4ee7-8071-0a8ed2f09c3b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "functionCode": "return [\n  {\n    json: {\n      tag: \"military\"\n    }\n  },\n  {\n    json: {\n      tag: \"global\"\n    }\n  },\n  {\n    json: {\n      tag: \"military\"\n    }\n  }\n];\n"
      },
      "name": "Create Example Data1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -896,
        1696
      ],
      "id": "a4836c2e-bf7a-4ac8-aed0-970a2acfbff7"
    },
    {
      "parameters": {
        "functionCode": "return [\n  {\n    json: {\n      tag: \"attack\"\n    }\n  },\n  {\n    json: {\n      tag: \"other\"\n    }\n  },\n  {\n    json: {\n      tag: \"attack\"\n    }\n  }\n];\n"
      },
      "name": "Classify Event Tag1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -1120,
        1696
      ],
      "id": "6b610d15-c9e4-4969-8ac8-f8987c3b215b"
    },
    {
      "parameters": {
        "content": "# MAINTENANCE: Refresh RAG Index from Google Sheets",
        "height": 256,
        "width": 880,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1552,
        784
      ],
      "typeVersion": 1,
      "id": "10d3e302-24d0-48b5-80ef-0f72c3085720",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1488,
        464
      ],
      "id": "fdf090df-17e4-4c31-9ea6-0c28680dc518",
      "name": "Schedule: Every 5h Check"
    },
    {
      "parameters": {
        "url": "http://api:8000/rss/fetch",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1312,
        464
      ],
      "id": "43a707fb-4f19-41a8-b9ac-564a74fdfff9",
      "name": "Read RSS Feed"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1104,
        464
      ],
      "id": "6606e7dc-d640-45d9-85f8-734a05d03ebd",
      "name": "Loop: Each News Item"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Process Single Article",
      "typeVersion": 1,
      "position": [
        -912,
        480
      ],
      "id": "80e16db7-53ef-44f3-add4-a7f2d72fd8b0"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n// for (const item of $input.all()) {\n//   item.json.myNewField = 1;\n// }\n\n// return $input.all();\n\n\nconst output = [];\n\nfor (const item of $('Classify Event Tag').all()) {\n  const tag = item.json.tag.toLowerCase();\n\n  if ([\"attack\", \"sanction\"].includes(tag)) {\n    const enriched = {\n      tag: tag,\n      confidence: item.json.confidence,\n      title: item.json.title,\n      summary: item.json.summary,\n      link: item.json.link\n    };\n\n    output.push({ json: enriched });\n  }\n}\n\nreturn output;\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        448
      ],
      "id": "02b32b80-a0c7-4c58-a938-756bdfc65b9a",
      "name": "Filter: Is Alert-Worthy?"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:8000/map_sector",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $json.title }}"
            },
            {
              "name": "tag",
              "value": "={{ $json.tag }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -208,
        448
      ],
      "id": "52e57653-c8ec-4438-b6de-377947d82080",
      "name": "Classify Affected Sector",
      "executeOnce": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:8000/analyze",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $('Filter: Is Alert-Worthy?').item.json.title }}"
            },
            {
              "name": "sector",
              "value": "={{ $json.sector }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        128,
        160
      ],
      "id": "fe84cf7f-4f29-4a7b-8eb5-b251d4602666",
      "name": "LLM: Analyze Event",
      "executeOnce": false
    },
    {
      "parameters": {
        "chatId": "7807262429",
        "text": "=ðŸš¨ ALARM: New article classified as {{ $('Filter: Is Alert-Worthy?').item.json.tag }}!  \n\nðŸ“Œ Title: {{ $('Filter: Is Alert-Worthy?').item.json.title }}\nðŸ”— Link: {{ $('Filter: Is Alert-Worthy?').item.json.link }}\nðŸ“Š Sector: {{ $('Classify Affected Sector').item.json.sector }}\nðŸ§  LLM Analysis: {{ $('LLM: Analyze Event').item.json.analysis }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        336,
        160
      ],
      "id": "9134b8f0-175b-41a7-af40-2a0f18ad577f",
      "name": "Send Telegram Alert",
      "webhookId": "fde9deba-745d-481f-831c-e70397c28a74",
      "credentials": {
        "telegramApi": {
          "id": "kpoorM1Vr0kBinUH",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "queryString": "war_news",
        "filter": {},
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        176,
        464
      ],
      "id": "c520438c-ee6b-4a9b-80f3-215875b01b3d",
      "name": "Find Sheet File",
      "alwaysOutputData": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "UH21xe0xzuZDws6X",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ac8fab9d-4e4a-4a4a-9b82-397d72bdd148",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        352,
        464
      ],
      "id": "1ee5141a-e038-43aa-a0cb-eef2002b56c3",
      "name": "Check if Sheet Exists"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI",
          "mode": "list",
          "cachedResultName": "war_news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1575723028,
          "mode": "list",
          "cachedResultName": "logs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI/edit#gid=1575723028"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $('Filter: Is Alert-Worthy?').item.json.title }}",
            "content": "={{ $('Filter: Is Alert-Worthy?').item.json.summary }}",
            "tag": "={{ $('Filter: Is Alert-Worthy?').item.json.tag }}",
            "url": "={{ $('Filter: Is Alert-Worthy?').item.json.link }}",
            "analysis": "={{ $('LLM: Analyze Event').item.json.analysis }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tag",
              "displayName": "tag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "analysis",
              "displayName": "analysis",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        592,
        448
      ],
      "id": "f5272e1b-578e-46c1-9bad-26a2cec50e3b",
      "name": "Append Row to Sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2bOUS9MG8AwZT0Fm",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "resource": "spreadsheet",
        "title": "war_news",
        "sheetsUi": {
          "sheetValues": [
            {
              "title": "logs"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        592,
        624
      ],
      "id": "af97767a-1a88-4266-bb82-433d7b850cd4",
      "name": "Create Sheet if Missing"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI",
          "mode": "list",
          "cachedResultName": "war_news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1575723028,
          "mode": "list",
          "cachedResultName": "logs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI/edit#gid=1575723028"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $('Filter: Is Alert-Worthy?').item.json.title }}",
            "content": "={{ $('Filter: Is Alert-Worthy?').item.json.summary }}",
            "tag": "={{ $('Filter: Is Alert-Worthy?').item.json.tag }}",
            "url": "={{ $('Filter: Is Alert-Worthy?').item.json.link }}",
            "analysis": "={{ $('LLM: Analyze Event').item.json.analysis }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tag",
              "displayName": "tag",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "analysis",
              "displayName": "analysis",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        800,
        624
      ],
      "id": "de8ad58e-6e7b-4536-b668-5cf3aa56f4ca",
      "name": "Append Row"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "chatIds": "7807262429"
        }
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -496,
        960
      ],
      "id": "019db180-787f-4234-85b1-5a6abb97d334",
      "name": "Telegram: Listen for Commands",
      "webhookId": "cc7c52a0-a370-4165-8576-86a62e96e5e9",
      "credentials": {
        "telegramApi": {
          "id": "kpoorM1Vr0kBinUH",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "results = []\n\nfor item in _input.all():\n    message = item['json'].get('message', {}).get('text', '')\n\n    if message.startswith(\"/ask\"):\n        results.append({\n            \"json\": {\n                \"command\": \"ask\",\n                \"question\": message[5:]  # obcina \"/ask \"\n            }\n        })\n    elif message == \"/last\":\n        results.append({\n            \"json\": {\n                \"command\": \"last\"\n            }\n        })\n    else:\n        results.append({\n            \"json\": {\n                \"command\": \"unknown\"\n            }\n        })\n\nreturn results\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -304,
        960
      ],
      "id": "63ce702b-881a-49de-b7b6-eb14fa7a35fd",
      "name": "Parse Telegram Command"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9519356d-d46a-4a23-8a96-f46402fa6206",
              "leftValue": "={{ $json.command }}",
              "rightValue": "ask",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        80,
        864
      ],
      "id": "67d6b702-5647-43d2-9ea6-f98844ceab66",
      "name": "IF /ask Command"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:8000/rag/ask",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "question",
              "value": "={{ $('Parse Telegram Command').item.json.question }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        304,
        848
      ],
      "id": "37a06e61-bccf-4fef-bba1-57a4d34a556b",
      "name": "LLM Ask â†’ /rag/ask"
    },
    {
      "parameters": {
        "chatId": "7807262429",
        "text": "={{ $json.answer }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        496,
        848
      ],
      "id": "125e81c0-1abb-48de-99e5-852d3d451951",
      "name": "Reply with Answer",
      "webhookId": "c8901973-e7eb-4068-beda-a4532ef98d4e",
      "credentials": {
        "telegramApi": {
          "id": "kpoorM1Vr0kBinUH",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9519356d-d46a-4a23-8a96-f46402fa6206",
              "leftValue": "={{ $json.command }}",
              "rightValue": "last",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        80,
        1024
      ],
      "id": "cf407f02-545e-4c0d-9398-593ce77f9eb2",
      "name": "IF /last Command"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9519356d-d46a-4a23-8a96-f46402fa6206",
              "leftValue": "={{ $json.command }}",
              "rightValue": "unknown",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        80,
        1184
      ],
      "id": "a1dc4ef0-b47c-4506-8747-307e33b3ee54",
      "name": "IF Unknown Command"
    },
    {
      "parameters": {
        "chatId": "7807262429",
        "text": "Command not recognized. Available: /ask, /last",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        304,
        1168
      ],
      "id": "efa3f5ac-e861-479d-a1fe-d05a3a137d20",
      "name": "Reply: Unknown Command",
      "webhookId": "c8901973-e7eb-4068-beda-a4532ef98d4e",
      "credentials": {
        "telegramApi": {
          "id": "kpoorM1Vr0kBinUH",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI",
          "mode": "list",
          "cachedResultName": "war_news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1575723028,
          "mode": "list",
          "cachedResultName": "logs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI/edit#gid=1575723028"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        304,
        1008
      ],
      "id": "cf393ba4-94db-4dda-9a9d-9e4a157ec647",
      "name": "Fetch Last Logged Event",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2bOUS9MG8AwZT0Fm",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "results = []\n\nfor item in _input.all():\n    message = item['json'].get('message', {}).get('text', '')\n\n    if message.startswith(\"/ask\"):\n        results.append({\n            \"json\": {\n                \"command\": \"ask\",\n                \"question\": message[5:]  # obcina \"/ask \"\n            }\n        })\n    elif message == \"/last\":\n        results.append({\n            \"json\": {\n                \"command\": \"last\"\n            }\n        })\n    elif message.startswith(\"/search\"):\n        results.append({\n            \"json\": {\n                \"command\": \"search\",\n                \"keyword\": message[8:]  # obcina \"/search \"\n            }\n        })\n    else:\n        results.append({\n            \"json\": {\n                \"command\": \"unknown\"\n            }\n        })\n\nreturn results\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        496,
        1008
      ],
      "id": "394e5d84-ec5a-44c5-ad5f-8a85d560a412",
      "name": "Format Event Summary"
    },
    {
      "parameters": {
        "chatId": "7807262429",
        "text": "=ðŸ“Œ Title: {{ $('Fetch Last Logged Event').item.json.title }}\n\nðŸ“Š Analysis:\n{{ $('Fetch Last Logged Event').item.json.analysis }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        672,
        1008
      ],
      "id": "96883a2c-666f-4742-a405-0f7b5734bc15",
      "name": "Reply with Last Event",
      "webhookId": "00a54b34-7be5-4500-8081-596ed086376e",
      "credentials": {
        "telegramApi": {
          "id": "kpoorM1Vr0kBinUH",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 6
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1392,
        864
      ],
      "id": "262c532d-f0b3-4943-a3e4-4bb40ea8bd14",
      "name": "Schedule: Refresh Index (Every 6h)"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI",
          "mode": "list",
          "cachedResultName": "war_news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vJVsWbcXqk1jnzw8deFAZFIUhnPkKiaMdjDPCsrIOdI/edit?usp=drivesdk"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {}
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1200,
        864
      ],
      "id": "d61cda66-aef0-4aa4-ac64-2730acfdb014",
      "name": "Get Latest Data from Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "UH21xe0xzuZDws6X",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:8000/rag/build-index",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -992,
        864
      ],
      "id": "84c73831-9e2e-4980-aab5-e6a865412932",
      "name": "Rebuild RAG Index"
    }
  ],
  "pinData": {},
  "connections": {
    "Classify Event Tag": {
      "main": [
        [
          {
            "node": "Filter: Is Alert-Worthy?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classify Event Tag1": {
      "main": [
        [
          {
            "node": "Create Example Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule: Every 5h Check": {
      "main": [
        [
          {
            "node": "Read RSS Feed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read RSS Feed": {
      "main": [
        [
          {
            "node": "Loop: Each News Item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop: Each News Item": {
      "main": [
        [
          {
            "node": "Classify Event Tag",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Process Single Article",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Single Article": {
      "main": [
        [
          {
            "node": "Loop: Each News Item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter: Is Alert-Worthy?": {
      "main": [
        [
          {
            "node": "Classify Affected Sector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classify Affected Sector": {
      "main": [
        [
          {
            "node": "LLM: Analyze Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM: Analyze Event": {
      "main": [
        [
          {
            "node": "Send Telegram Alert",
            "type": "main",
            "index": 0
          },
          {
            "node": "Find Sheet File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Sheet File": {
      "main": [
        [
          {
            "node": "Check if Sheet Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Sheet Exists": {
      "main": [
        [
          {
            "node": "Append Row to Sheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Sheet if Missing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Sheet if Missing": {
      "main": [
        [
          {
            "node": "Append Row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram: Listen for Commands": {
      "main": [
        [
          {
            "node": "Parse Telegram Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Telegram Command": {
      "main": [
        [
          {
            "node": "IF /ask Command",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF /last Command",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Unknown Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF /ask Command": {
      "main": [
        [
          {
            "node": "LLM Ask â†’ /rag/ask",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM Ask â†’ /rag/ask": {
      "main": [
        [
          {
            "node": "Reply with Answer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF /last Command": {
      "main": [
        [
          {
            "node": "Fetch Last Logged Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Unknown Command": {
      "main": [
        [
          {
            "node": "Reply: Unknown Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Last Logged Event": {
      "main": [
        [
          {
            "node": "Format Event Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Event Summary": {
      "main": [
        [
          {
            "node": "Reply with Last Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule: Refresh Index (Every 6h)": {
      "main": [
        [
          {
            "node": "Get Latest Data from Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Latest Data from Google Drive": {
      "main": [
        [
          {
            "node": "Rebuild RAG Index",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8e68ea13-a257-46dd-a600-a196a32ce6e5",
  "meta": {
    "instanceId": "e6ea64ca1c85a6c286470fa09705e178b654d0b4c6283fd45391bf151660cddc"
  },
  "id": "iLiwUVRtM7JDkBin",
  "tags": []
}